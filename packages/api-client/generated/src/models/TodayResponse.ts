/* tslint:disable */
/* eslint-disable */
/**
 * Template API
 * Template Application API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@template.example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TodayResponse
 */
export interface TodayResponse {
    /**
     * Current date (YYYY-MM-DD format)
     * @type {Date}
     * @memberof TodayResponse
     */
    date: Date;
    /**
     * Day of the week
     * @type {string}
     * @memberof TodayResponse
     */
    dayOfWeek: string;
    /**
     * Response timestamp
     * @type {Date}
     * @memberof TodayResponse
     */
    timestamp: Date;
    /**
     * Formatted date string
     * @type {string}
     * @memberof TodayResponse
     */
    formatted: string;
}

/**
 * Check if a given object implements the TodayResponse interface.
 */
export function instanceOfTodayResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "dayOfWeek" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "formatted" in value;

    return isInstance;
}

export function TodayResponseFromJSON(json: any): TodayResponse {
    return TodayResponseFromJSONTyped(json, false);
}

export function TodayResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TodayResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'dayOfWeek': json['dayOfWeek'],
        'timestamp': (new Date(json['timestamp'])),
        'formatted': json['formatted'],
    };
}

export function TodayResponseToJSON(value?: TodayResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': (value.date.toISOString().substr(0,10)),
        'dayOfWeek': value.dayOfWeek,
        'timestamp': (value.timestamp.toISOString()),
        'formatted': value.formatted,
    };
}

